;;; beton-theme.el --- Theme 

;; Copyright (C) 2021 , 

;; Author: 
;; Version: 0.1
;; Package-Requires: ((emacs "24"))
;; Created with ThemeCreator, https://github.com/mswift42/themecreator.


;; This program is free software: you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation, either version 3 of the License, or
;; (at your option) any later version.

;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
;; GNU General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with this program. If not, see <http://www.gnu.org/licenses/>.

;; This file is not part of Emacs.

;;; Commentary:

;;; Code:

 (deftheme beton)
 (let ((class '((class color) (min-colors 89)))
       (fg1 "#232c31")
       (fg2 "#353d41")
       (fg3 "#464e52")
       (fg4 "#585f62")
       (bg1 "#f5f2f0")
       (bg2 "#ECE9E8")
       (bg3 "#E4E1DF")
       (bg4 "#DBD8D7")
       (blue "#325cc0")
       (teal "#0083b2")
       (yellow "#cb9000")
       (highlight-yellow "#ffe5a5")
       (purple "#9343b1")
       (dark-teal "#006285")
       (keyword "#232c31")
       (dark-yellow   "#996d00")
       (red "#aa3731")
       (dark-red "#7f2925")
       (dark-blue    "#284a9a")
       (green     "#448c27")
       (dark-green "#32681d")
       (dark-purple    "#75358d")
       (var     "#232c31")
       (warning "#ff0000")
       (warning2 "#ff8800"))
   (setq ansi-color-names-vector `[,bg1 ,dark-red ,dark-green ,dark-yellow ,dark-blue ,dark-purple ,dark-teal ,fg1])
   (custom-theme-set-faces
    'beton
        `(ansi-color-red ((,class (:background ,red :foreground ,red))))
        `(ansi-color-bright-red ((,class (:background ,dark-red :foreground ,dark-red))))
        `(ansi-color-cyan ((,class (:background ,teal :foreground ,teal))))
        `(ansi-color-bright-cyan ((,class (:background ,dark-teal :foreground ,dark-teal))))
        `(default ((,class (:background ,bg1 :foreground ,fg1))))
        `(font-lock-builtin-face ((,class (:italic t :foreground ,fg1))))
        `(font-lock-comment-face ((,class (:italic t :underline t :foreground ,red))))
	`(font-lock-negation-char-face ((,class (:foreground ,fg1))))
	`(font-lock-reference-face ((,class (:foreground ,fg1))))
	`(font-lock-constant-face ((,class (:foreground ,fg1))))
        `(font-lock-doc-face ((,class (:foreground ,red))))
        `(font-lock-function-name-face ((,class (:bold t :foreground ,fg1))))
        `(font-lock-keyword-face ((,class (:bold :foreground ,fg1))))
	`(highlight-function-calls-face ((,class (:bold :foreground ,fg1))))
        `(font-lock-string-face ((,class (:foreground ,green))))
        `(font-lock-type-face ((,class (:foreground ,fg1 ))))
        `(font-lock-variable-name-face ((,class (:foreground ,var))))
        `(font-lock-warning-face ((,class (:foreground ,warning :background ,bg2))))
        `(term-color-black ((,class (:foreground ,fg2 :background nil))))
        `(highlight ((,class (:foreground ,fg3 :background ,bg3))))
	`(hl-line ((,class (:background  ,bg2))))
	`(fringe ((,class (:background ,bg1 :foreground ,fg4))))
	`(cursor ((,class (:background ,blue :invert-video t))))
	`(sp-show-pair-match-face ((,class (:background ,bg4))))
        `(show-paren-match ((,class (:background ,highlight-yellow))))
        `(isearch ((,class (:bold t :foreground ,warning :background ,bg3))))
        `(mode-line ((,class (:box (:line-width 1 :color nil) :bold t :foreground ,fg4 :background ,bg2))))
        `(mode-line-inactive ((,class (:box (:line-width 1 :color nil :style pressed-button) :foreground ,var :background ,bg1 :weight normal))))
        `(mode-line-buffer-id ((,class (:bold t :foreground ,dark-blue :background nil))))
	`(mode-line-highlight ((,class (:foreground ,keyword :box nil :weight bold))))
        `(mode-line-emphasis ((,class (:foreground ,fg1))))
	`(vertical-border ((,class (:foreground ,fg3))))
        `(minibuffer-prompt ((,class (:bold t :foreground ,keyword))))
        `(default-italic ((,class (:italic t))))
	`(link ((,class (:foreground ,dark-yellow :underline t))))
	`(org-code ((,class (:foreground ,fg2))))
	`(org-hide ((,class (:foreground ,fg4))))
        `(org-level-1 ((,class (:bold t :foreground ,fg2 :height 1.1))))
        `(org-level-2 ((,class (:bold nil :foreground ,fg3))))
        `(org-level-3 ((,class (:bold t :foreground ,fg4))))
        `(org-level-4 ((,class (:bold nil :foreground ,bg4))))
        `(org-date ((,class (:underline t :foreground ,var) )))
        `(org-footnote  ((,class (:underline t :foreground ,fg4))))
        `(org-link ((,class (:underline t :foreground ,blue))))
        `(org-special-keyword ((,class (:foreground ,dark-teal))))
        `(org-block ((,class (:foreground ,fg3))))
	`(org-table ((,class (:bold t :foreground ,dark-teal))))
        `(org-quote ((,class (:inherit org-block :slant italic))))
        `(org-verse ((,class (:inherit org-block :slant italic))))
        `(org-todo ((,class (:box (:line-width 1 :color ,fg3) :foreground ,keyword :bold t))))
        `(org-done ((,class (:box (:line-width 1 :color ,bg3) :bold t :foreground ,bg4))))
        `(org-warning ((,class (:underline t :foreground ,warning))))
        `(org-agenda-structure ((,class (:weight bold :foreground ,fg3 :box (:color ,fg4) :background ,bg3))))
        `(org-agenda-date ((,class (:foreground ,var :height 1.1 ))))
        `(org-agenda-date-weekend ((,class (:weight normal :foreground ,fg4))))
        `(org-agenda-date-today ((,class (:weight bold :foreground ,keyword :height 1.4))))
        `(org-agenda-done ((,class (:foreground ,bg4))))
	`(org-scheduled ((,class (:foreground ,dark-purple))))
        `(org-scheduled-today ((,class (:foreground ,dark-blue :weight bold :height 1.2))))
	`(org-ellipsis ((,class (:foreground ,dark-teal))))
	`(org-verbatim ((,class (:foreground ,fg4))))
        `(org-document-info-keyword ((,class (:foreground ,dark-blue))))
	`(font-latex-bold-face ((,class (:foreground ,dark-purple))))
	`(font-latex-italic-face ((,class (:foreground ,var :italic t))))
	`(font-latex-string-face ((,class (:foreground ,green))))
	`(font-latex-match-reference-keywords ((,class (:foreground ,dark-yellow))))
	`(font-latex-match-variable-keywords ((,class (:foreground ,var))))
	`(ido-only-match ((,class (:foreground ,warning))))
	`(org-sexp-date ((,class (:foreground ,fg4))))
	`(ido-first-match ((,class (:foreground ,keyword :bold t))))
        `(ivy-current-match ((,class (:foreground ,fg3 :inherit highlight :underline t))))
	`(gnus-header-content ((,class (:foreground ,keyword))))
	`(gnus-header-from ((,class (:foreground ,var))))
	`(gnus-header-name ((,class (:foreground ,dark-purple))))
	`(gnus-header-subject ((,class (:foreground ,dark-blue :bold t))))
	`(mu4e-view-url-number-face ((,class (:foreground ,dark-purple))))
	`(mu4e-cited-1-face ((,class (:foreground ,fg2))))
	`(mu4e-cited-7-face ((,class (:foreground ,fg3))))
	`(mu4e-header-marks-face ((,class (:foreground ,dark-purple))))
	`(ffap ((,class (:foreground ,fg4))))
	`(js2-private-function-call ((,class (:foreground ,dark-yellow))))
	`(js2-jsdoc-html-tag-delimiter ((,class (:foreground ,green))))
	`(js2-jsdoc-html-tag-name ((,class (:foreground ,var))))
	`(js2-external-variable ((,class (:foreground ,dark-purple  ))))
        `(js2-function-param ((,class (:foreground ,dark-yellow))))
        `(js2-jsdoc-value ((,class (:foreground ,green))))
        `(js2-private-member ((,class (:foreground ,fg3))))
        `(js3-warning-face ((,class (:underline ,keyword))))
        `(js3-error-face ((,class (:underline ,warning))))
        `(js3-external-variable-face ((,class (:foreground ,var))))
        `(js3-function-param-face ((,class (:foreground ,fg2))))
        `(js3-jsdoc-tag-face ((,class (:foreground ,keyword))))
        `(js3-instance-member-face ((,class (:foreground ,dark-yellow))))
	`(warning ((,class (:foreground ,warning)))) 
	`(ac-completion-face ((,class (:underline t :foreground ,keyword))))
	`(info-quoted-name ((,class (:foreground ,dark-teal))))
	`(info-string ((,class (:foreground ,green))))
	`(icompletep-determined ((,class :foreground ,dark-teal)))
        `(undo-tree-visualizer-current-face ((,class :foreground ,dark-teal)))
        `(undo-tree-visualizer-default-face ((,class :foreground ,fg2)))
        `(undo-tree-visualizer-unmodified-face ((,class :foreground ,var)))
        `(undo-tree-visualizer-register-face ((,class :foreground ,dark-purple)))
	`(slime-repl-inputed-output-face ((,class (:foreground ,dark-purple))))
        `(trailing-whitespace ((,class :foreground nil :background ,warning)))
        `(rainbow-delimiters-depth-1-face ((,class :foreground ,fg1)))
        `(rainbow-delimiters-depth-2-face ((,class :foreground ,teal)))
        `(rainbow-delimiters-depth-3-face ((,class :foreground ,yellow)))
        `(rainbow-delimiters-depth-4-face ((,class :foreground ,purple)))
        `(magit-item-highlight ((,class :background ,bg3)))
        `(magit-section-heading        ((,class (:foreground ,keyword :weight bold))))
        `(magit-hunk-heading           ((,class (:background ,bg3))))
        `(magit-section-highlight      ((,class (:background ,bg2))))
        `(magit-hunk-heading-highlight ((,class (:background ,bg3))))
        `(magit-diff-context-highlight ((,class (:background ,bg3 :foreground ,fg3))))
        `(magit-diffstat-added   ((,class (:foreground ,dark-purple))))
        `(magit-diffstat-removed ((,class (:foreground ,var))))
        `(magit-process-ok ((,class (:foreground ,dark-blue :weight bold))))
        `(magit-process-ng ((,class (:foreground ,warning :weight bold))))
        `(magit-branch ((,class (:foreground ,dark-yellow :weight bold))))
        `(magit-log-author ((,class (:foreground ,fg3))))
        `(magit-hash ((,class (:foreground ,fg2))))
        `(magit-diff-file-header ((,class (:foreground ,fg2 :background ,bg3))))
        `(lazy-highlight ((,class (:foreground ,fg2 :background ,bg3))))
	`(eshell-ls-archive ((,class (:foreground ,dark-purple))))
	`(eshell-ls-backup ((,class (:foreground ,yellow))))
	`(eshell-ls-clutter ((,class (:foreground ,fg2))))
	`(eshell-ls-directory ((,class (:foreground ,dark-blue))))
       	`(eshell-ls-executable ((,class (:foreground ,dark-green))))
       	`(eshell-ls-missing ((,class (:foreground ,red))))
       	`(eshell-ls-product ((,class (:foreground ,dark-red))))
        `(eshell-ls-readonly ((,class (:foreground ,dark-yellow))))
       	`(eshell-ls-special ((,class (:foreground ,purple))))
	`(eshell-ls-symlink ((,class (:foreground ,dark-teal))))
	`(eshell-ls-unreadable ((,class (:foreground ,fg1))))
	`(eshell-prompt ((,class (:bold t :foreground ,fg1))))
        `(term ((,class (:foreground ,fg1 :background ,bg1))))
        `(term-color-black ((,class (:foreground ,bg3 :background ,bg3))))
        `(term-color-blue ((,class (:foreground ,dark-blue :background ,dark-blue))))
        `(term-color-red ((,class (:foreground ,keyword :background ,bg3))))
        `(term-color-green ((,class (:foreground ,dark-purple :background ,bg3))))
        `(term-color-yellow ((,class (:foreground ,var :background ,var))))
        `(term-color-magenta ((,class (:foreground ,dark-teal :background ,dark-teal))))
        `(term-color-cyan ((,class (:foreground ,green :background ,green))))
        `(term-color-white ((,class (:foreground ,fg2 :background ,fg2))))
        `(rainbow-delimiters-unmatched-face ((,class :foreground ,warning)))
        `(helm-header ((,class (:foreground ,fg2 :background ,bg1 :underline nil :box nil))))
        `(helm-source-header ((,class (:foreground ,keyword :background ,bg1 :underline nil :weight bold))))
        `(helm-selection ((,class (:background ,bg2 :underline nil))))
        `(helm-selection-line ((,class (:background ,bg2))))
        `(helm-visible-mark ((,class (:foreground ,bg1 :background ,bg3))))
        `(helm-candidate-number ((,class (:foreground ,bg1 :background ,fg1))))
        `(helm-separator ((,class (:foreground ,dark-purple :background ,bg1))))
        `(helm-time-zone-current ((,class (:foreground ,dark-teal :background ,bg1))))
        `(helm-time-zone-home ((,class (:foreground ,dark-purple :background ,bg1))))
        `(helm-buffer-not-saved ((,class (:foreground ,dark-purple :background ,bg1))))
        `(helm-buffer-process ((,class (:foreground ,dark-teal :background ,bg1))))
        `(helm-buffer-saved-out ((,class (:foreground ,fg1 :background ,bg1))))
        `(helm-buffer-size ((,class (:foreground ,fg1 :background ,bg1))))
        `(helm-ff-directory ((,class (:foreground ,dark-blue :background ,bg1 :weight bold))))
        `(helm-ff-file ((,class (:foreground ,fg1 :background ,bg1 :weight normal))))
        `(helm-ff-executable ((,class (:foreground ,var :background ,bg1 :weight normal))))
        `(helm-ff-invalid-symlink ((,class (:foreground ,warning2 :background ,bg1 :weight bold))))
        `(helm-ff-symlink ((,class (:foreground ,keyword :background ,bg1 :weight bold))))
        `(helm-ff-prefix ((,class (:foreground ,bg1 :background ,keyword :weight normal))))
        `(helm-grep-cmd-line ((,class (:foreground ,fg1 :background ,bg1))))
        `(helm-grep-file ((,class (:foreground ,fg1 :background ,bg1))))
        `(helm-grep-finish ((,class (:foreground ,fg2 :background ,bg1))))
        `(helm-grep-lineno ((,class (:foreground ,fg1 :background ,bg1))))
        `(helm-grep-match ((,class (:foreground nil :background nil :inherit helm-match))))
        `(helm-grep-running ((,class (:foreground ,dark-blue :background ,bg1))))
        `(helm-moccur-buffer ((,class (:foreground ,dark-blue :background ,bg1))))
        `(helm-source-go-package-godoc-description ((,class (:foreground ,green))))
        `(helm-bookmark-w3m ((,class (:foreground ,dark-purple))))
        `(company-echo-common ((,class (:foreground ,bg1 :background ,fg1))))
        `(company-preview ((,class (:background ,bg1 :foreground ,var))))
        `(company-preview-common ((,class (:foreground ,bg2 :foreground ,fg3))))
        `(company-preview-search ((,class (:foreground ,dark-purple :background ,bg1))))
        `(company-scrollbar-bg ((,class (:background ,bg3))))
        `(company-scrollbar-fg ((,class (:foreground ,keyword))))
        `(company-tooltip ((,class (:foreground ,fg2 :background ,bg1 :bold t))))
        `(company-tooltop-annotation ((,class (:foreground ,dark-yellow))))
        `(company-tooltip-common ((,class ( :foreground ,fg3))))
        `(company-tooltip-common-selection ((,class (:foreground ,green))))
        `(company-tooltip-mouse ((,class (:inherit highlight))))
        `(company-tooltip-selection ((,class (:background ,bg3 :foreground ,fg3))))
        `(company-template-field ((,class (:inherit region))))
	`(web-mode-html-tag-face ((,class (:inherit ,font-lock-keyword-face))))
	`(web-mode-block-delimiter-face ((,class (:inherit ,font-lock-keyword-face))))
	`(web-mode-html-attr-value-face ((,class (:inherit ,font-lock-string-face))))
        `(web-mode-html-attr-name-face ((,class (:inherit ,font-lock-builtin-face))))
        `(web-mode-html-attr-custom-face ((,class (:inherit ,font-lock-builtin-face))))
        `(web-mode-html-attr-custom-face ((,class (:inherit ,font-lock-builtin-face))))
        `(web-mode-comment-face ((,class (:inherit ,font-lock-comment-face))))
        `(web-mode-constant-face ((,class (:inherit ,font-lock-constant-face))))
	`(web-mode-symbol-face ((,class (:inherit ,font-lock-builtin-face))))
        `(web-mode-keyword-face ((,class (:foreground ,keyword))))
        `(web-mode-doctype-face ((,class (:inherit ,font-lock-comment-face))))
        `(web-mode-function-name-face ((,class (:inherit ,font-lock-function-name-face))))
        `(web-mode-string-face ((,class (:foreground ,green))))
        `(web-mode-type-face ((,class (:inherit ,font-lock-type-face))))
        `(web-mode-warning-face ((,class (:inherit ,font-lock-warning-face))))
        `(web-mode-html-tag-face ((,class (:foreground ,dark-teal))))
        `(jde-java-font-lock-package-face ((t (:foreground ,var))))
        `(jde-java-font-lock-public-face ((t (:foreground ,keyword))))
        `(jde-java-font-lock-private-face ((t (:foreground ,keyword))))
        `(jde-java-font-lock-constant-face ((t (:foreground ,dark-yellow))))
        `(jde-java-font-lock-modifier-face ((t (:foreground ,fg2))))
        `(jde-jave-font-lock-protected-face ((t (:foreground ,keyword))))
        `(jde-java-font-lock-number-face ((t (:foreground ,var))))
        )
  ;; emacs >= 26.1
  (when (>= emacs-major-version 26)
    (custom-theme-set-faces
     'beton
     `(line-number ((t (:inherit fringe))))
     `(line-number-current-line ((t (:inherit fringe :foreground "black" :weight bold))))))
  ;; emacs >= 27.1
  (when (>= emacs-major-version 27)
    (custom-theme-set-faces
     'beton
     `(line-number ((t (:background ,bg2 :foreground ,fg4))))
     `(line-number-current-line ((t (:background ,bg2 :foreground ,fg1))))
     `(tab-line ((,class (:inherit fringe :box (:line-width 4 :color ,bg2)))))
     `(tab-line-tab ((,class (:inherit tab-line))))
     `(tab-line-tab-inactive ((,class (:inherit tab-line :foreground ,red))))
     `(tab-line-tab-current  ((,class (:background ,bg4 :foreground ,fg1 :box (:line-width 4 :color ,bg4)))))
     `(tab-line-highlight    ((,class (:background ,bg1 :foreground ,fg2 :box (:line-width 4 :color ,bg1)))))))

   )

;;;###autoload
(when load-file-name
  (add-to-list 'custom-theme-load-path
               (file-name-as-directory (file-name-directory load-file-name))))

(provide-theme 'beton)

;; Local Variables:
;; no-byte-compile: t
;; End:

;;; beton-theme.el ends here
